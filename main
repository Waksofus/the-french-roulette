#Bibliotheque
import time
import os
import random
import pygame
from perso import Perso
from fusil import Fusil
from couleurs import BLEU, ROUGE, FOND_PARIS, FROMAGE, BAGUETTE, BERET, TEXTE, PV_BARRE, PV_FOND
#Initialisation de Pygame
pygame.init()
base_file = os.path.dirname(__file__) # Pour recuperer le chemin du fichier

#Configurations de la fenetre
LARGEUR, HAUTEUR = 800, 600
screen = pygame.display.set_mode((LARGEUR, HAUTEUR))
pygame.display.set_caption("The French Roulette")

#Polices
font = pygame.font.Font(None, 36)
font_petit = pygame.font.Font(None, 24)

#Fonction pour dessiner le fond et les elements du jeu
def refresh():
    """ Rafraîchit l'ecran en redessinant le fond, le joueur, le bot, les pv du joueur et les pv du joueur puis actualise l'ecran
        Pas de parametres
        None"""
     #Dessiner fond
    dessiner_fond()
    
    #Dessiner personnages
    dessiner_perso(joueur, 100, 300)
    dessiner_perso(bot, 500, 300)
    
    #Dessiner PV
    dessiner_pv(joueur, 100, 250)
    dessiner_pv(bot, 500, 250)
    
    #Actualiser l'ecran
    pygame.display.flip()

def dessiner_fond():
    """ Renvoie le sprite du fond en fonction d'une image donnee
        Pas de parametres
        None"""
    #Fond Tour Eiffel
    screen.fill(FOND_PARIS)
    #screen.blit(tour_eiffel, (200, 1))  #Position a ajuster selon image
    pygame.draw.rect(screen, BLEU, (0, 0, LARGEUR, HAUTEUR // 6))  #Bande bleue en haut (bleu France)

#Image du joueur	
perso_path = os.path.join(base_file, "assets","perso_sprite.png")
perso_sprite = pygame.image.load(perso_path) #Image a telecharger/ajouter
perso_scaled = pygame.transform.scale(perso_sprite, (200, 150)) #Ajuster l'echelle de l'image
#Image du bot
bot_path = os.path.join(base_file, "assets","bot_sprite.png")
bot_sprite = pygame.image.load(bot_path) 
bot_scaled = pygame.transform.scale(bot_sprite, (200, 150)) 


def dessiner_perso(perso, x, y):
    """ Renvoie le sprite du personnage ainsi que son nom en fonction d'une image donnee
        Pas de parametres
        None"""
    #Affiche les perso avec leur beret (et un petit effet si mort)
    if perso.is_bot:
        screen.blit(bot_scaled, (x+20, y))
    else:
        screen.blit(perso_scaled, (x+20, y))
    texte_nom = font.render(perso.nom, True, TEXTE)
    screen.blit(texte_nom, (x - 20, y + 50))  #Affiche le nom du personnage

def dessiner_pv(perso, x, y):
    """ Dessine les pv du joueur
        Pas de parametres 
        None"""
    #Barre de PV
    pygame.draw.rect(screen, PV_FOND, (x, y, 200, 20))
    pygame.draw.rect(screen, PV_BARRE, (x, y, 200 * (perso.pv / 3), 20))  #Ratio PV restant

#Images (les images a ajouter dans le dossier assets si tu veux les personnaliser)
#tour_eiffel = pygame.image.load('Desktop/Projet NSI/assets/tour_eiffel.png')  #Image a telecharger/ajouter
#baguette_image = pygame.image.load('Desktop/Projet NSI/assets/baguette.png')
#beret_image = pygame.image.load('Desktop/Projet NSI/assets/beret.png')

#Classes initialisees
joueur = Perso("Joueur")
bot = Perso("Bot",True)
fusil = Fusil()

#Boucle principale du jeu
joueur_avec_fusil=joueur
running = True
while running:
    #evenements
    for event in pygame.event.get():
        if event.type == pygame.QUIT or not bot.est_vivant() or not joueur.est_vivant():
            running = False

        if event.type == pygame.MOUSEBUTTONDOWN:
            if event.button == 1:  #Clic gauche = tirer sur soi
                joueur_cible=joueur
            if event.button == 3:  #Clic droit = tirer sur bot
                joueur_cible=bot
            
            pv_perdu = joueur_avec_fusil.action_tirer(joueur_cible, fusil.tirer())
            if pv_perdu:
                texte_info = font_petit.render(f"{joueur_cible.nom} a pris une balle !", True, TEXTE)
                screen.blit(texte_info, (250, 500))
                pygame.display.flip()
            else:
                texte_info = font_petit.render("Balle a blanc ! Rien n'est arrive.", True, TEXTE)
                screen.blit(texte_info, (250, 500))
                pygame.display.flip()
            
            if joueur_cible.vient_de_perdre_pv or joueur_avec_fusil!=joueur_cible: #Le joueur vient de toucher (lui ou le bot) ou tirer a blanc sur l'autre => on change de joueur
                joueur_avec_fusil=(joueur if joueur_avec_fusil.is_bot else bot)
                dessiner_pv(joueur, 100, 250)
                dessiner_pv(bot, 500, 250)
                pygame.display.flip()
                time.sleep(2)
                
                while joueur_avec_fusil.is_bot and bot.est_vivant() and joueur.est_vivant(): #Le bot rejoue tant que c'est a lui (s'il se tire a blanc dessus) et si tout le monde est en vie
                    #STRAT DU BOT 
                    refresh()
                    
                    if joueur_avec_fusil.pv == 1: #S’il est en danger, le bot tire uniquement sur le joueur
                        joueur_cible = joueur
                    else: #50% de chance de se tirer ou tirer l'autre
                        joueur_cible = bot if random.random() > 0.5 else joueur
                    
                    pv_perdu = joueur_avec_fusil.action_tirer(joueur_cible, fusil.tirer())
                    if pv_perdu:
                        texte_info = font_petit.render(f"{joueur_cible.nom} a pris une balle !", True, TEXTE)
                        screen.blit(texte_info, (250, 500))
                        pygame.display.flip()
                    else:
                        texte_info = font_petit.render("Balle a blanc ! Rien n'est arrive.", True, TEXTE)
                        screen.blit(texte_info, (250, 500))
                        pygame.display.flip()
                    
                    if joueur_cible.vient_de_perdre_pv or joueur_avec_fusil!=joueur_cible: #Le bot vient de toucher (lui ou le joueur) ou tirer a blanc sur l'autre => on change de joueur
                        joueur_avec_fusil=joueur
                        dessiner_pv(joueur, 100, 250)
                        dessiner_pv(bot, 500, 250)
                        pygame.display.flip()
                        time.sleep(2)

    refresh()
    pygame.time.Clock().tick(60)

if bot.est_vivant():
    texte_info = font.render(f"{joueur.nom} est mort ! {bot.nom} a gagne !", True, TEXTE)
    screen.blit(texte_info, (250, 500))
    pygame.display.flip()
else:
    texte_info = font.render(f"{bot.nom} est mort ! {joueur.nom} a gagne !", True, TEXTE)
    screen.blit(texte_info, (250, 500))
    pygame.display.flip()

time.sleep(4)
pygame.quit()
